--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=v2(v0(v30,16));if v19 then local v94=v5(v83,v19);v19=nil;return v94;else return v83;end end end);local function v20(v31,v32,v33) if v33 then local v84=(v31/((5 -3)^(v32-((1639 -(1523 + 114)) -1))))%(((3 + 0) -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + (932 -(857 + (105 -31))))) ;return v84-(v84%1) ;else local v85=568 -(367 + 201) ;local v86;while true do if (v85==(927 -(214 + 713))) then v86=(1 + 1)^(v32-1) ;return (((v31%(v86 + v86))>=v86) and (1 + 0)) or (877 -(282 + 595)) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 + 0 ;local v36;local v37;while true do if (v35==(1 + 0)) then return (v37 * (1321 -(68 + 997))) + v36 ;end if (v35==0) then v36,v37=v1(v16,v18,v18 + (1272 -(226 + 1044)) );v18=v18 + (8 -6) ;v35=(217 -99) -(32 + 85) ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (4 -1) );v18=v18 + (354 -(87 + 263)) ;return (v41 * (16777396 -(67 + 113))) + (v40 * (48056 + 17480)) + (v39 * (628 -372)) + v38 ;end local function v24() local v42=0 + 0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(3 -2)) then v45=953 -((3797 -2995) + 150) ;v46=(v20(v44,(768 -(745 + 21)) -1 ,36 -16 ) * ((432 -(44 + 386))^32)) + v43 ;v42=2 + 0 ;end if (v42==((394 + 606) -(915 + (282 -200)))) then if (v47==0) then if (v46==(0 -(0 -0))) then return v48 * (0 + 0) ;else v47=773 -(201 + (2318 -(760 + 987))) ;v45=0 -0 ;end elseif (v47==(3234 -(1069 + 118))) then return ((v46==(0 + 0)) and (v48 * ((2 -1)/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-((2091 -(1789 + 124)) + 845) ) * (v45 + (v46/((3 -1)^(52 + 0)))) ;end if (v42==(793 -(368 + 4 + 419))) then v47=v20(v44,65 -(35 + 9) ,2 + 29 );v48=((v20(v44,12 + 20 )==(19 -((1065 -(87 + 968)) + 8))) and  -1) or (1 -0) ;v42=11 -(35 -27) ;end if (v42==(442 -(416 + 26))) then v43=v23();v44=v23();v42=(3 + 0) -2 ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==0) then return "";end end v50=v3(v16,v18,(v18 + v49) -(2 -1) );v18=v18 + v49 ;local v51={};for v66=1414 -(447 + 966) , #v50 do v51[v66]=v2(v1(v3(v50,v66,v66)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0 -0 ;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do if (v52~=1) then else local v90=(function() return 0;end)();local v91=(function() return;end)();while true do if (v90==0) then v91=(function() return 0;end)();while true do if (v91==(2 -0)) then v52=(function() return 5 -3 ;end)();break;end if (v91==1) then v59=(function() return {};end)();for v112= #"/",v58 do local v113=(function() return 285 -(134 + 151) ;end)();local v114=(function() return;end)();local v115=(function() return;end)();local v116=(function() return;end)();while true do if (v113==0) then local v184=(function() return 1665 -(970 + 695) ;end)();while true do if ((1 -0)==v184) then v113=(function() return 1991 -(582 + 1408) ;end)();break;end if (v184==0) then v114=(function() return 0;end)();v115=(function() return nil;end)();v184=(function() return 3 -2 ;end)();end end end if (v113==1) then v116=(function() return nil;end)();while true do if (v114~=(0 -0)) then else local v876=(function() return 0;end)();while true do if (v876~=1) then else v114=(function() return 1;end)();break;end if (v876==0) then v115=(function() return v21();end)();v116=(function() return nil;end)();v876=(function() return 3 -2 ;end)();end end end if (v114==(1825 -(1195 + 629))) then if (v115== #"}") then v116=(function() return v21()~=(0 -0) ;end)();elseif (v115==2) then v116=(function() return v24();end)();elseif (v115== #"-19") then v116=(function() return v25();end)();end v59[v112]=(function() return v116;end)();break;end end break;end end end v91=(function() return 243 -(187 + 54) ;end)();end if (v91~=(780 -(162 + 618))) then else local v107=(function() return 0;end)();while true do if (v107==(0 + 0)) then v57=(function() return {v54,v55,nil,v56};end)();v58=(function() return v23();end)();v107=(function() return 1 -0 ;end)();end if (v107==(1 -0)) then v91=(function() return 1;end)();break;end end end end break;end end end if (v52==2) then v57[ #"gha"]=(function() return v21();end)();for v95= #" ",v23() do local v96=(function() return 0 + 0 ;end)();local v97=(function() return;end)();while true do if (v96~=(1636 -(1373 + 263))) then else v97=(function() return v21();end)();if (v20(v97, #">", #"[")~=0) then else local v108=(function() return 1000 -(451 + 549) ;end)();local v109=(function() return;end)();local v110=(function() return;end)();local v111=(function() return;end)();while true do if (v108~=(1 + 1)) then else if (v20(v110, #".", #"/")== #">") then v111[2 -0 ]=(function() return v59[v111[2 -0 ]];end)();end if (v20(v110,2,2)~= #":") then else v111[ #"gha"]=(function() return v59[v111[ #"gha"]];end)();end v108=(function() return 3;end)();end if (3==v108) then if (v20(v110, #"nil", #"91(")== #".") then v111[ #"asd1"]=(function() return v59[v111[ #"0313"]];end)();end v54[v95]=(function() return v111;end)();break;end if (v108==1) then v111=(function() return {v22(),v22(),nil,nil};end)();if (v109==(1384 -(746 + 638))) then local v199=(function() return 0 + 0 ;end)();local v200=(function() return;end)();while true do if (v199==0) then v200=(function() return 0;end)();while true do if (v200==0) then v111[ #"91("]=(function() return v22();end)();v111[ #"asd1"]=(function() return v22();end)();break;end end break;end end elseif (v109== #" ") then v111[ #"91("]=(function() return v23();end)();elseif (v109==2) then v111[ #"-19"]=(function() return v23() -(2^16) ;end)();elseif (v109== #"gha") then local v1006=(function() return 0;end)();while true do if (v1006==(0 -0)) then v111[ #"xxx"]=(function() return v23() -(2^16) ;end)();v111[ #"xnxx"]=(function() return v22();end)();break;end end end v108=(function() return 2;end)();end if (v108==(341 -(218 + 123))) then local v120=(function() return 0;end)();while true do if ((1582 -(1535 + 46))~=v120) then else v108=(function() return 1 + 0 ;end)();break;end if (v120~=0) then else v109=(function() return v20(v97,2, #"91(");end)();v110=(function() return v20(v97, #"0836",1 + 5 );end)();v120=(function() return 561 -(306 + 254) ;end)();end end end end end break;end end end for v98= #".",v23() do v55,v98,v28=(function() return v53(v55,v98,v28);end)();end return v57;end if (v52==(0 + 0)) then local v93=(function() return 0;end)();while true do if (v93==(0 -0)) then v53=(function() return function(v103,v104,v105) local v106=(function() return 0;end)();while true do if (v106==0) then local v117=(function() return 0;end)();local v118=(function() return;end)();while true do if (v117~=(1467 -(899 + 568))) then else v118=(function() return 0;end)();while true do if (v118==(0 + 0)) then v103[v104-#"]" ]=(function() return v105();end)();return v103,v104,v105;end end break;end end end end end;end)();v54=(function() return {};end)();v93=(function() return 1;end)();end if (v93~=1) then else v55=(function() return {};end)();v56=(function() return {};end)();v93=(function() return 4 -2 ;end)();end if (v93~=(605 -(268 + 335))) then else v52=(function() return 291 -(60 + 230) ;end)();break;end end end end end local function v29(v60,v61,v62) local v63=v60[2 -1 ];local v64=v60[574 -((1408 -982) + 146) ];local v65=v60[1 + 2 ];return function(...) local v68=v63;local v69=v64;local v70=v65;local v71=v27;local v72=1457 -(282 + 1174) ;local v73= -(812 -(569 + 242));local v74={};local v75={...};local v76=v12("#",...) -(1 + 0) ;local v77={};local v78={};for v87=(755 + 269) -(706 + 318) ,v76 do if (v87>=v70) then v74[v87-v70 ]=v75[v87 + (1252 -(721 + 530)) ];else v78[v87]=v75[v87 + (1272 -(945 + 326)) ];end end local v79=(v76-v70) + ((2 + 0) -1) ;local v80;local v81;while true do v80=v68[v72];v81=v80[1 + 0 ];if ((4317<=4848) and (v81<=((1342 -(14 + 603)) -(271 + 429)))) then if (v81<=(12 + 0)) then if (v81<=((1634 -(118 + 11)) -(1408 + 92))) then if (v81<=(1088 -(461 + 625))) then if ((641<4795) and (v81<=(1288 -(993 + 295)))) then local v121;local v122;local v123;v78[v80[1 + 1 ]]={};v72=v72 + (1172 -(68 + 350 + 753)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[1 + 2 ]][v80[4]];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[1 + (2 -1) ]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[531 -(406 + 123) ]]=v78[v80[1772 -(1749 + 20) ]][v80[1 + 3 ]];v72=v72 + (1323 -(1249 + (1022 -(551 + 398)))) ;v80=v68[v72];v78[v80[2]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1147 -(466 + 679) ]]=v78[v80[3]][v80[4]];v72=v72 + (2 -(1 + 0)) ;v80=v68[v72];v78[v80[2]]=v78[v80[3]][v80[(4 + 7) -7 ]];v72=v72 + 1 ;v80=v68[v72];v123=v80[2 + 0 ];v122=v78[v123];v121=v80[1903 -(106 + 1794) ];for v185=1 + (0 -0) ,v121 do v122[v185]=v78[v123 + v185 ];end elseif ((v81>((2 -1) + 0)) or (3538<=1184)) then local v201;v201=v80[5 -3 ];v78[v201]=v78[v201](v13(v78,v201 + 1 ,v80[7 -4 ]));v72=v72 + (115 -(4 + 110)) ;v80=v68[v72];v78[v80[586 -(57 + 527) ]][v80[(464 + 966) -(41 + 1386) ]]=v78[v80[107 -(17 + 86) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[3 -(3 -2) ]]=v78[v80[3]];v72=v72 + ((1 + 1) -1) ;v80=v68[v72];v78[v80[2]]=v80[169 -(122 + 44) ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[6 -4 ]]=v80[3 + 0 ];v72=v72 + 1 + 0 ;v80=v68[v72];v201=v80[2];v78[v201]=v78[v201](v13(v78,v201 + (1 -0) ,v80[3]));v72=v72 + 1 ;v80=v68[v72];v78[v80[67 -(30 + 35) ]][v80[3 + 0 ]]=v78[v80[1261 -(1043 + 214) ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[1214 -(323 + 889) ]]=v78[v80[3]];v72=v72 + (90 -(40 + 49)) ;v80=v68[v72];v78[v80[5 -3 ]]=v80[583 -(361 + 219) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[(1226 -904) -(53 + 267) ]]=v80[1 + 2 ];v72=v72 + (414 -(15 + 398)) ;v80=v68[v72];v201=v80[984 -(18 + 964) ];v78[v201]=v78[v201](v13(v78,v201 + (3 -(492 -(99 + 391))) ,v80[2 + 1 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[853 -(17 + 3 + 830) ]]=v78[v80[4 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[128 -(116 + 10) ]]=v78[v80[1 + 2 ]];v72=v72 + (739 -(542 + 196)) ;v80=v68[v72];v78[v80[3 -1 ]]=v80[1 + 2 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[3];v72=v72 + (2 -(4 -3)) ;v80=v68[v72];v201=v80[4 -2 ];v78[v201]=v78[v201](v13(v78,v201 + ((3843 -2291) -(1126 + 425)) ,v80[3]));v72=v72 + (406 -(118 + 287)) ;v80=v68[v72];v78[v80[7 -5 ]][v80[1124 -(118 + 1003) ]]=v78[v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[380 -(142 + 235) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[9 -7 ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[980 -(553 + 424) ];v72=v72 + (1 -0) ;v80=v68[v72];v201=v80[2 + 0 + 0 ];v78[v201]=v78[v201](v13(v78,v201 + 1 + 0 ,v80[2 + 1 ]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[2 + 1 ]]=v78[v80[4]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[(1609 -(1032 + 572)) -3 ]]=v78[v80[6 -3 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[9 -7 ]]=v80[(1173 -(203 + 214)) -(239 + 514) ];v72=v72 + 1 + (1817 -(568 + 1249)) ;v80=v68[v72];v78[v80[1331 -(797 + 532) ]]=v80[3 + 0 + 0 ];v72=v72 + 1 ;v80=v68[v72];v201=v80[1 + 1 ];v78[v201]=v78[v201](v13(v78,v201 + 1 ,v80[6 -3 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[4 -2 ]][v80[1205 -(373 + 829) ]]=v78[v80[735 -(476 + (984 -729)) ]];v72=v72 + (1131 -(369 + 761)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[3]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[3 -1 ]]=v80[241 -(64 + 174) ];v72=v72 + (1307 -(913 + 393)) + 0 ;v80=v68[v72];v78[v80[2 -(0 -0) ]]=v80[3];v72=v72 + (337 -(144 + (270 -78))) ;v80=v68[v72];v201=v80[218 -(42 + 174) ];v78[v201]=v78[v201](v13(v78,v201 + 1 + 0 ,v80[3 + 0 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[412 -(269 + 141) ]][v80[2 + 1 ]]=v78[v80[1508 -(363 + 1141) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1582 -(1183 + 397) ]]=v78[v80[3]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3 + 0 ];v72=v72 + (1976 -(1913 + (137 -75))) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v201=v80[5 -3 ];v78[v201]=v78[v201](v13(v78,v201 + (1934 -(565 + 1368)) ,v80[11 -(1989 -(362 + 1619)) ]));v72=v72 + (1662 -(1477 + 184)) ;v80=v68[v72];v78[v80[2]][v80[3 -0 ]]=v78[v80[4 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[858 -(564 + 292) ]]=v78[v80[4 -1 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[306 -(244 + 60) ]]=v80[(1628 -(950 + 675)) + 0 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[478 -(16 + 25 + 435) ]]=v80[3];v72=v72 + (1002 -(938 + 63)) ;v80=v68[v72];v201=v80[2];v78[v201]=v78[v201](v13(v78,v201 + (1180 -(216 + 963)) + 0 ,v80[1128 -(936 + 189) ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[3]]=v78[v80[1617 -(1565 + 48) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1140 -(782 + 356) ]]=v78[v80[(1557 -(485 + 802)) -(176 + 91) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[7 -4 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1094 -((1534 -(432 + 127)) + 117) ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v201=v80[1877 -(157 + 1718) ];v78[v201]=v78[v201](v13(v78,v201 + 1 + 0 ,v80[10 -7 ]));v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[(2093 -(1065 + 8)) -(697 + 321) ]][v80[7 -4 ]]=v78[v80[8 -4 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[5 -3 ]]=v80[3];v72=v72 + (1228 -(179 + 143 + 905)) ;v80=v68[v72];v78[v80[613 -(602 + 9) ]]=v80[1192 -(449 + 740) ];v72=v72 + 1 ;v80=v68[v72];v201=v80[874 -(826 + 46) ];v78[v201]=v78[v201](v13(v78,v201 + (948 -(245 + 702)) ,v80[9 -6 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[1901 -(260 + 1638) ]]=v78[v80[444 -(382 + 58) ]];v72=v72 + (3 -(1603 -(635 + 966))) ;v80=v68[v72];v78[v80[2 + 0 ]]=v62[v80[5 -2 ]];v72=v72 + (2 -(1 + 0)) ;v80=v68[v72];v78[v80[44 -(5 + 37) ]]=v78[v80[(3004 -1796) -(902 + 303) ]][v80[8 -4 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + 1 ]]={};v72=v72 + ((704 + 987) -(1121 + 569)) ;v80=v68[v72];v78[v80[216 -(22 + 192) ]]=v78[v80[686 -(483 + 200) ]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1465 -(1404 + 59) ]]={};v72=v72 + ((2 -0) -1) ;v80=v68[v72];v78[v80[2 -0 ]]=v78[v80[768 -(468 + 297) ]][v80[566 -(334 + 228) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[6 -4 ]]=v62[v80[6 -3 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3]][v80[4]];v72=v72 + (237 -(141 + 95)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[7 -4 ];v72=v72 + ((1 + 1) -1) ;v80=v68[v72];v78[v80[2]]=v80[1 + (3 -1) ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]=v80[3 + 0 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 -0 ]]=v80[2 + 1 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[165 -(92 + 71) ]]=v80[2 + 1 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[767 -(574 + 191) ]]=v80[3 + 0 ];v72=v72 + ((7 -5) -1) ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + (850 -(254 + 595)) ;v80=v68[v72];v78[v80[2]]=v80[129 -(55 + 71) ];v72=v72 + ((1 -0) -0) ;v80=v68[v72];v78[v80[1792 -(573 + 1217) ]]=v80[8 -5 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[(9 -5) -1 ];v72=v72 + (940 -(714 + 225)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 -0 ]]=v80[(530 -(318 + 211)) + 2 ];v72=v72 + (1 -0) ;v80=v68[v72];v201=v80[9 -7 ];v78[v201]=v78[v201](v13(v78,v201 + 1 ,v80[809 -(118 + 688) ]));v72=v72 + (49 -(25 + 23)) ;v80=v68[v72];v78[v80[1 + 1 ]][v78[v80[3]]]=v78[v80[1890 -(927 + 959) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1589 -(963 + 624) ]]=v78[v80[(5 + 5) -7 ]][v80[736 -((862 -(518 + 328)) + 716) ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[99 -(11 + 86) ]]={};v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[(668 -381) -((279 -104) + 110) ]]=v78[v80[3]][v80[9 -5 ]];v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[2]][v78[v80[1799 -(503 + 1293) ]]]=v80[11 -7 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[(319 -(301 + 16)) + 0 ]]=v78[v80[1064 -(810 + 251) ]][v80[3 + 1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]={};else local v303;v78[v80[535 -(43 + 490) ]]=v80[736 -(711 + 22) ];v72=v72 + 1 ;v80=v68[v72];v303=v80[2];v78[v303]=v78[v303](v13(v78,v303 + 1 ,v80[11 -8 ]));v72=v72 + (860 -(240 + 619)) ;v80=v68[v72];v78[v80[(2 -1) + 1 ]][v80[3]]=v78[v80[5 -1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1746 -(1344 + 400) ]]=v78[v80[408 -(255 + 150) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[(33 -21) -9 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + ((7 -4) -2) ;v80=v68[v72];v303=v80[1741 -(404 + 1335) ];v78[v303]=v78[v303](v13(v78,v303 + (407 -(183 + 223)) ,v80[3 -0 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v80[2 + 1 ]]=v78[v80[341 -(10 + 327) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[2 + 1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[341 -(118 + 220) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[452 -(108 + 341) ];v72=v72 + 1 + 0 ;v80=v68[v72];v303=v80[2];v78[v303]=v78[v303](v13(v78,v303 + 1 ,v80[3]));v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[1495 -((1517 -806) + 471 + 311) ]][v80[5 -2 ]]=v78[v80[(46 + 427) -(270 + 199) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1821 -(580 + 1239) ]]=v78[v80[(25 -17) -5 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[1 + 2 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[7 -4 ];v72=v72 + 1 + 0 ;v80=v68[v72];v303=v80[1169 -(645 + 522) ];v78[v303]=v78[v303](v13(v78,v303 + (1791 -(326 + 684 + 780)) ,v80[(1022 -(829 + 190)) + 0 ]));v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[(17 -12) -(3 -0) ]][v80[3]]=v78[v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1838 -(1045 + 791) ]]=v78[v80[7 -4 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 -0 ]]=v80[3];v72=v72 + ((698 -192) -(351 + 154)) ;v80=v68[v72];v78[v80[2]]=v80[1577 -(1281 + 293) ];v72=v72 + (267 -(28 + 238)) ;v80=v68[v72];v303=v80[4 -2 ];v78[v303]=v78[v303](v13(v78,v303 + ((3875 -2315) -(1381 + 178)) ,v80[3]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[3]]=v78[v80[2 + 2 ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2 + 0 + 0 ]]=v78[v80[(155 + 318) -(381 + 89) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3 + 0 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1158 -(1074 + (248 -166)) ]]=v80[6 -3 ];v72=v72 + (1785 -(214 + 1482 + 88)) ;v80=v68[v72];v303=v80[1457 -(990 + 465) ];v78[v303]=v78[v303](v13(v78,v303 + 1 + 0 ,v80[2 + 1 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[2]][v80[(616 -(520 + 93)) + 0 ]]=v78[v80[4]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[1728 -(1668 + 58) ]]=v78[v80[629 -(512 + 114) ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[3 -1 ]]=v80[10 -7 ];v72=v72 + (277 -(259 + 17)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[1 + 2 ];v72=v72 + 1 + 0 ;v80=v68[v72];v303=v80[6 -4 ];v78[v303]=v78[v303](v13(v78,v303 + (1995 -(109 + 1885)) ,v80[1472 -(1269 + 200) ]));v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]][v80[818 -(98 + 717) ]]=v78[v80[830 -(802 + 24) ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 -0 ]]=v78[v80[1 + 2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 + 0 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[(26 -18) -(596 -(396 + 195)) ];v72=v72 + (3 -2) ;v80=v68[v72];v303=v80[1 + 1 ];v78[v303]=v78[v303](v13(v78,v303 + 1 + 0 ,v80[3]));v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[3 + 0 ]]=v78[v80[2 + 2 ]];v72=v72 + (1434 -(797 + 636)) ;v80=v68[v72];v78[v80[9 -7 ]]=v78[v80[1622 -(1427 + 192) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[2 + (2 -1) ];v72=v72 + ((2088 -(440 + 1321)) -(192 + 134)) ;v80=v68[v72];v303=v80[2];v78[v303]=v78[v303](v13(v78,v303 + (1277 -(316 + 960)) ,v80[2 + 1 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[3]]=v78[v80[15 -11 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[553 -(83 + 468) ]]=v78[v80[1809 -(1202 + 604) ]];v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[2 -0 ]]=v80[(1837 -(1059 + 770)) -5 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[327 -(45 + (1294 -1014)) ]]=v80[3 + 0 ];v72=v72 + 1 + 0 ;v80=v68[v72];v303=v80[547 -(424 + 121) ];v78[v303]=v78[v303](v13(v78,v303 + 1 + 0 ,v80[2 + 1 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 0 + 1 ]][v80[5 -2 ]]=v78[v80[1351 -(641 + 706) ]];v72=v72 + (1912 -(340 + 1571)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[1775 -(1733 + 39) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[5 -3 ]]=v80[1037 -(50 + 75 + 909) ];v72=v72 + (1949 -(1096 + 852)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[3 -0 ];v72=v72 + (441 -(249 + 191)) + 0 ;v80=v68[v72];v303=v80[514 -(409 + 103) ];v78[v303]=v78[v303](v13(v78,v303 + (237 -(46 + 190)) ,v80[98 -(51 + 44) ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(5745 -4426) -(1114 + 203) ]][v80[729 -(228 + 498) ]]=v78[v80[1 + 3 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[665 -(174 + 489) ]]=v78[v80[3]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[1908 -(830 + 1075) ];v72=v72 + (525 -(303 + 221)) ;v80=v68[v72];v78[v80[1271 -(231 + 1038) ]]=v80[(11 -8) + 0 ];v72=v72 + (1163 -(171 + 991)) ;v80=v68[v72];v303=v80[8 -6 ];v78[v303]=v78[v303](v13(v78,v303 + (2 -1) ,v80[430 -(183 + 244) ]));v72=v72 + (2 -(1 + 0)) ;v80=v68[v72];v78[v80[2]][v80[733 -(434 + 296) ]]=v78[v80[4 + 0 ]];v72=v72 + ((9 -6) -2) ;v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[4 -1 ]];v72=v72 + (3 -(514 -(169 + 343))) ;v80=v68[v72];v78[v80[2]]=v80[1251 -(111 + 1137) ];v72=v72 + (159 -(91 + 67)) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v303=v80[5 -3 ];v78[v303]=v78[v303](v13(v78,v303 + 1 + 0 ,v80[526 -(371 + 52 + 100) ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[7 -4 ]]=v78[v80[4]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[774 -(326 + 445) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[13 -10 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[4 -2 ]]=v80[714 -(530 + 181) ];v72=v72 + 1 ;v80=v68[v72];v303=v80[883 -(614 + 267) ];v78[v303]=v78[v303](v13(v78,v303 + (33 -(19 + 13)) ,v80[4 -1 ]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[5 -3 ]][v80[1 + 2 ]]=v78[v80[6 -2 ]];v72=v72 + (1 -(0 -0)) ;v80=v68[v72];v78[v80[2]]=v78[v80[3]];v72=v72 + (1813 -(1293 + 519)) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[4 -2 ]]=v80[5 -2 ];v72=v72 + 1 ;v80=v68[v72];v303=v80[8 -6 ];v78[v303]=v78[v303](v13(v78,v303 + 1 ,v80[3]));v72=v72 + ((2 + 0) -1) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[1 + (5 -3) ]]=v78[v80[(1132 -(651 + 472)) -5 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[1 + 1 + 1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[1099 -((864 -155) + (870 -(397 + 86))) ];v72=v72 + (1859 -(673 + 1185)) ;v80=v68[v72];v78[v80[5 -3 ]]=v80[3];v72=v72 + (3 -2) ;v80=v68[v72];v303=v80[2];v78[v303]=v78[v303](v13(v78,v303 + (1 -0) ,v80[3 + 0 ]));v72=v72 + 1 + (876 -(423 + 453)) ;v80=v68[v72];v78[v80[2 -0 ]][v80[1 + 2 ]]=v78[v80[7 -3 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[(192 + 1690) -(446 + 1434) ]]=v78[v80[3]];v72=v72 + (1284 -(1040 + 243)) ;v80=v68[v72];v78[v80[(1 + 4) -3 ]]=v80[1850 -(559 + 1288) ];end elseif (v81<=(1934 -(609 + 1322))) then local v137;local v138;local v139;v78[v80[456 -(13 + 441) ]]=v78[v80[10 -7 ]][v80[10 -6 ]];v72=v72 + (4 -(3 + 0)) ;v80=v68[v72];v78[v80[2]]=v78[v80[1 + 2 ]][v80[14 -10 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[8 -5 ]][v80[3 + 1 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 + 0 ]]=v78[v80[2 + 1 ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v139=v80[2 + 0 ];v138=v78[v139];v137=v80[3 + 0 ];for v188=434 -(153 + 280) ,v137 do v138[v188]=v78[v139 + v188 ];end elseif (v81==(11 -7)) then local v406;local v407;local v408;v78[v80[2 + 0 ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3 + 0 + 0 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 -0 ]]= #v78[v80[(1192 -(50 + 1140)) + 1 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[669 -(89 + 578) ]]=v80[3 + 0 ];v72=v72 + (1 -0) ;v80=v68[v72];v408=v80[1051 -(572 + 477) ];v407=v78[v408];v406=v78[v408 + 1 + 1 ];if (v406>(0 + 0 + 0)) then if ((v407>v78[v408 + 1 + 0 ]) or (3810>4775)) then v72=v80[3];else v78[v408 + (89 -(84 + 1 + 1)) ]=v407;end elseif (v407<v78[v408 + 1 ]) then v72=v80[4 -1 ];else v78[v408 + 3 + 0 ]=v407;end else v78[v80[2]]={};end elseif (v81<=8) then if (v81<=(848 -(497 + (495 -150)))) then do return;end elseif (v81==(1 + 6)) then local v419=v80[1 + 1 ];v78[v419]=v78[v419](v13(v78,v419 + 1 ,v80[1336 -(605 + 728) ]));else local v421=0 + 0 ;local v422;local v423;while true do if (v421==(0 -0)) then v422=v80[2];v423=v78[v80[1 + 0 + 2 ]];v421=3 -2 ;end if (((1 + 0)==v421) or (3401<=2215)) then v78[v422 + ((598 -(157 + 439)) -1) ]=v423;v78[v422]=v423[v80[4]];break;end end end elseif (v81<=10) then if (v81>(7 + 2)) then local v424=v80[491 -(457 + 32) ];local v425=v78[v424];for v826=v424 + 1 + 0 ,v80[3] do v7(v425,v78[v826]);end else local v426;v78[v80[1404 -(832 + 570) ]]=v78[v80[3 + 0 ]];v72=v72 + 1 + (0 -0) ;v80=v68[v72];v78[v80[6 -4 ]]=v80[2 + 1 ];v72=v72 + (797 -(588 + 208)) ;v80=v68[v72];v78[v80[5 -3 ]]=v80[1803 -(884 + (3043 -2127)) ];v72=v72 + 1 ;v80=v68[v72];v426=v80[2];v78[v426]=v78[v426](v13(v78,v426 + (1 -(0 -0)) ,v80[2 + 1 ]));v72=v72 + (654 -(232 + 421)) ;v80=v68[v72];v78[v80[1891 -((2487 -(782 + 136)) + 320) ]][v80[1 + 2 ]]=v78[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[6 -4 ]]=v78[v80[3]];v72=v72 + 1 ;v80=v68[v72];v78[v80[607 -(316 + 289) ]]=v80[7 -(859 -(112 + 743)) ];v72=v72 + (1172 -(1026 + 145)) + 0 + 0 ;v80=v68[v72];v78[v80[1455 -((1384 -(493 + 225)) + (2892 -2105)) ]]=v80[428 -(360 + 40 + 25) ];v72=v72 + 1 + 0 ;v80=v68[v72];v426=v80[256 -(79 + 175) ];v78[v426]=v78[v426](v13(v78,v426 + ((2 -1) -(0 + 0)) ,v80[3 + 0 ]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[3 -1 ]][v80[3]]=v78[v80[4]];v72=v72 + ((2572 -1672) -(147 + 356 + 396)) ;v80=v68[v72];v78[v80[183 -(92 + (148 -59)) ]]=v78[v80[5 -2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[(1597 -(210 + 1385)) + 0 ]]=v80[2 + (1690 -(1201 + 488)) ];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v426=v80[1 + 1 ];v78[v426]=v78[v426](v13(v78,v426 + (2 -1) ,v80[3 + 0 + 0 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -3 ]][v80[1 + 2 ]]=v78[v80[5 -1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1246 -(485 + 759) ]]=v78[v80[6 -3 ]];v72=v72 + (1190 -(442 + (1327 -580))) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[1138 -((1491 -659) + (888 -(352 + 233))) ];v72=v72 + (947 -(88 + 858)) ;v80=v68[v72];v426=v80[(2 -1) + 1 ];v78[v426]=v78[v426](v13(v78,v426 + 1 ,v80[2 + 1 + 0 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[791 -(766 + (65 -42)) ]][v80[(588 -(489 + 85)) -(1512 -(277 + 1224)) ]]=v78[v80[5 -1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[10 -7 ]];v72=v72 + ((2567 -(663 + 830)) -(1036 + 37)) ;v80=v68[v72];v78[v80[2 + 0 + 0 ]]=v80[6 -3 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[1483 -(641 + 839) ];v72=v72 + (914 -(910 + 3)) ;v80=v68[v72];v426=v80[2];v78[v426]=v78[v426](v13(v78,v426 + (2 -1) ,v80[1687 -(1466 + 218) ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1150 -(556 + 592) ]][v80[(877 -(461 + 414)) + 1 ]]=v78[v80[812 -(329 + 479) ]];v72=v72 + (855 -(174 + 680)) ;v80=v68[v72];v78[v80[(2 + 4) -4 ]]=v78[v80[3]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[742 -(159 + 237 + 343) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[1480 -(3 + 26 + 1448) ];v72=v72 + (1390 -(134 + 1 + 1254)) ;v80=v68[v72];v426=v80[7 -5 ];v78[v426]=v78[v426](v13(v78,v426 + (4 -3) ,v80[2 + 1 ]));v72=v72 + ((1778 -(172 + 78)) -(389 + 1138)) ;v80=v68[v72];v78[v80[576 -(102 + 472) ]][v80[3 + 0 ]]=v78[v80[3 + 1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1547 -(320 + 1225) ]]=v78[v80[5 -2 ]];v72=v72 + (1 -0) + 0 ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[(2115 -649) -(157 + 1307) ]]=v80[1862 -(821 + 1038) ];v72=v72 + 1 ;v80=v68[v72];v426=v80[2];v78[v426]=v78[v426](v13(v78,v426 + (2 -1) ,v80[3]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v80[1 + 2 ]]=v78[v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[3 -1 ]]=v78[v80[2 + 1 ]];v72=v72 + ((1 + 1) -(1 -0)) ;v80=v68[v72];v78[v80[1028 -((1049 -215) + 192) ]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[1 + 2 ];v72=v72 + 1 + 0 ;v80=v68[v72];v426=v80[2 -0 ];v78[v426]=v78[v426](v13(v78,v426 + (305 -(300 + 4)) ,v80[3]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -3 ]][v80[3]]=v78[v80[366 -(112 + 250) ]];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[(3 + 1) -2 ]]=v78[v80[2 + 1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[3 + 0 ];v72=v72 + (1415 -(1001 + 413)) ;v80=v68[v72];v426=v80[4 -2 ];v78[v426]=v78[v426](v13(v78,v426 + (883 -(87 + 157 + 638)) ,v80[696 -(627 + 66) ]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[604 -((2038 -1526) + 90) ]][v80[3]]=v78[v80[(4449 -2539) -(1665 + 241) ]];v72=v72 + (718 -(373 + 344)) ;v80=v68[v72];v78[v80[2]]=v78[v80[2 + 1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -3 ]]=v80[4 -1 ];v72=v72 + (1100 -(35 + 1064)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[1 + 2 ];v72=v72 + (2 -1) ;v80=v68[v72];v426=v80[1 + 1 ];v78[v426]=v78[v426](v13(v78,v426 + ((707 + 530) -(298 + 938)) ,v80[1262 -(233 + 1026) ]));v72=v72 + (1667 -(636 + (1477 -(133 + 314)))) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[3 + 0 ]]=v78[v80[2 + 2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[224 -(55 + 166) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[11 -8 ];v72=v72 + (298 -(36 + 261)) ;v80=v68[v72];v78[v80[3 -1 ]]=v80[1371 -(6 + 28 + 1334) ];v72=v72 + 1 + 0 ;v80=v68[v72];v426=v80[2 + 0 ];v78[v426]=v78[v426](v13(v78,v426 + (1284 -((1248 -(199 + 14)) + 248)) ,v80[24 -(20 + 1) ]));v72=v72 + (3 -2) + 0 ;v80=v68[v72];v78[v80[321 -(134 + 185) ]][v80[1136 -(549 + 584) ]]=v78[v80[689 -(314 + 371) ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[(2519 -(647 + 902)) -(478 + 490) ]]=v78[v80[2 + 1 ]];v72=v72 + (1173 -(786 + 386)) ;v80=v68[v72];v78[v80[6 -(11 -7) ]]=v80[1382 -(1055 + 324) ];v72=v72 + (1341 -(1093 + 247)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[1 + 2 ];v72=v72 + (3 -2) ;v80=v68[v72];v426=v80[(239 -(85 + 148)) -4 ];v78[v426]=v78[v426](v13(v78,v426 + (2 -1) ,v80[3]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[(1300 -(426 + 863)) -8 ]]=v78[v80[13 -9 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[3]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + (689 -((1703 -1339) + 324)) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + ((1656 -(873 + 781)) -1) ;v80=v68[v72];v426=v80[4 -2 ];v78[v426]=v78[v426](v13(v78,v426 + 1 + 0 ,v80[(15 -3) -9 ]));v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[5 -3 ]][v80[1271 -((3372 -2123) + 19) ]]=v78[v80[4 + 0 ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[1088 -(285 + 401 + 400) ]]=v78[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[231 -(73 + 156) ]]=v80[1 + 2 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[813 -(721 + 90) ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v426=v80[1 + 1 ];v78[v426]=v78[v426](v13(v78,v426 + 1 ,v80[9 -6 ]));v72=v72 + (471 -(224 + (908 -662))) ;v80=v68[v72];v78[v80[2]][v80[4 -1 ]]=v78[v80[6 -(2 -0) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[(2 -1) + 2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[3 + 0 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[3 -1 ]]=v80[3];v72=v72 + (3 -2) ;v80=v68[v72];v426=v80[515 -(203 + 310) ];v78[v426]=v78[v426](v13(v78,v426 + (1994 -(1238 + 755)) ,v80[1 + 2 ]));v72=v72 + (1535 -(709 + 825)) ;v80=v68[v72];v78[v80[3 -1 ]][v80[3 -0 ]]=v78[v80[868 -(196 + (2615 -(414 + 1533))) ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[3 -(1 + 0) ]]=v78[v80[836 -(171 + 662) ]];v72=v72 + (94 -(4 + 89)) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + ((558 -(443 + 112)) -2) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[13 -10 ];v72=v72 + 1 + 0 ;v80=v68[v72];v426=v80[1488 -(35 + 1451) ];v78[v426]=v78[v426](v13(v78,v426 + (1454 -(28 + 1425)) ,v80[3]));v72=v72 + (1994 -(941 + 1052)) ;v80=v68[v72];v78[v80[(1481 -(888 + 591)) + 0 ]][v80[1517 -(822 + 692) ]]=v78[v80[5 -1 ]];end elseif (v81==(6 + 5)) then v78[v80[(772 -473) -(45 + 252) ]]=v78[v80[3 + 0 ]][v80[1 + 1 + 2 ]];v72=v72 + ((7 -5) -1) ;v80=v68[v72];v78[v80[435 -(114 + 125 + 194) ]][v78[v80[3]]]=v80[(3 + 2) -1 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v78[v80[2 + 1 ]][v80[5 -1 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1965 -(556 + 1407) ]][v78[v80[1209 -(741 + 465) ]]]=v80[469 -(170 + 295) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[7 -4 ]][v80[4 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]][v78[v80[1233 -(957 + 30 + 243) ]]]=v80[2 + 2 ];v72=v72 + 1 + (0 -0) ;v80=v68[v72];v78[v80[7 -(9 -4) ]]=v78[v80[7 -4 ]][v80[4]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[9 -7 ]][v78[v80[1783 -(389 + 1391) ]]]=v80[(1681 -(136 + 1542)) + 1 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]][v78[v80[(3128 -2174) -(778 + 5 + 168) ]]]=v78[v80[13 -9 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v78[v80[314 -(309 + 2) ]]]=v78[v80[12 -8 ]];else local v542=v80[1214 -(1090 + 122) ];local v543,v544=v71(v78[v542](v13(v78,v542 + 1 ,v80[1 + (2 -0) ])));v73=(v544 + v542) -((3 + 0) -2) ;local v545=0;for v827=v542,v73 do local v828=0 + (486 -(68 + 418)) ;while true do if ((2557==2557) and (v828==0)) then v545=v545 + (1119 -(628 + 490)) ;v78[v827]=v543[v545];break;end end end end elseif (v81<=(4 + (37 -23))) then if (v81<=(37 -(39 -17))) then if ((v81<=(59 -46)) or (2318<=1935)) then local v152=0;local v153;local v154;local v155;while true do if (v152==0) then v153=v80[(670 + 106) -(431 + 343) ];v154=v78[v153];v152=1 -0 ;end if (v152==(2 -1)) then v155=v78[v153 + 2 + 0 ];if (v155>(0 + 0)) then if (v154>v78[v153 + (1696 -(556 + 1139)) ]) then v72=v80[18 -(6 + 9) ];else v78[v153 + 1 + 2 ]=v154;end elseif (v154<v78[v153 + 1 + 0 ]) then v72=v80[3];else v78[v153 + 3 ]=v154;end break;end end elseif (v81>(183 -(28 + 141))) then if  not v78[v80[1 + 1 ]] then v72=v72 + 1 ;else v72=v80[3 -0 ];end else local v546=0 + 0 ;local v547;while true do if (v546==(1317 -(486 + 831))) then v547=v80[5 -3 ];do return v78[v547](v13(v78,v547 + 1 ,v80[10 -7 ]));end break;end end end elseif (v81<=(4 + 12)) then local v156=0 -0 ;while true do if (v156==(1271 -(668 + 595))) then v78[v80[2 + 0 ]]=v78[v80[1 + 2 ]][v80[4]];v72=v72 + (2 -1) ;v80=v68[v72];v156=299 -(23 + 267) ;end if ((3449==3449) and (v156==(1950 -(1129 + 815)))) then v78[v80[389 -(371 + 16) ]]=v78[v80[3]][v80[1754 -(1326 + 424) ]];v72=v72 + (1 -0) ;v80=v68[v72];v156=25 -18 ;end if ((v156==(127 -(88 + 30))) or (1349>=1360)) then v78[v80[2]]={};break;end if (v156==(772 -(720 + 51))) then v78[v80[4 -2 ]]=v78[v80[3]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v156=1778 -(421 + 1355) ;end if ((3810>=779) and (v156==7)) then v78[v80[2 -0 ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v156=1091 -(286 + 797) ;end if (v156==(0 -0)) then v78[v80[2 -0 ]][v78[v80[3]]]=v78[v80[443 -(397 + 42) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v156=801 -(24 + 776) ;end if (v156==5) then v78[v80[2]][v78[v80[4 -1 ]]]=v78[v80[789 -(222 + 563) ]];v72=v72 + 1 ;v80=v68[v72];v156=6;end if (v156==(8 -4)) then v78[v80[2 + 0 ]][v78[v80[3]]]=v80[4];v72=v72 + 1 ;v80=v68[v72];v156=195 -(23 + 167) ;end if (v156==(1800 -(690 + 1108))) then v78[v80[2]][v78[v80[2 + 1 ]]]=v80[4 + 0 ];v72=v72 + 1 ;v80=v68[v72];v156=851 -(40 + 808) ;end if ((v156==(1 + 2)) or (2423==1135)) then v78[v80[7 -5 ]]=v78[v80[3]][v80[4 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v156=3 + 1 ;end end elseif (v81==(10 + 7)) then v78[v80[573 -(47 + 524) ]]();else v78[v80[2 + 0 ]]=v78[v80[8 -5 ]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 -0 ]][v78[v80[6 -3 ]]]=v80[1730 -(1165 + 561) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[6 -4 ]][v78[v80[2 + 1 ]]]=v78[v80[483 -(341 + 138) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[3 -1 ]][v78[v80[329 -(89 + 237) ]]]=v78[v80[12 -8 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[883 -(581 + 300) ]]=v78[v80[1223 -(855 + 365) ]][v80[9 -5 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[1237 -(1030 + 205) ]]=v78[v80[3 + 0 ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[288 -(156 + 130) ]][v78[v80[3]]]=v80[4];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 -0 ]]=v78[v80[5 -2 ]][v80[2 + 2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[71 -(10 + 59) ]]=v78[v80[1 + 2 ]][v80[4]];end elseif (v81<=(103 -82)) then if ((v81<=(1182 -(671 + 492))) or (4712<=2944)) then v78[v80[2 + 0 ]]=v61[v80[1218 -(369 + 846) ]];elseif (v81==20) then local v568=0;local v569;local v570;local v571;while true do if ((v568==2) or (4586<=2063)) then v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3 + 0 ]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v568=3;end if (((1945 -(1036 + 909))==v568) or (3589<=3247)) then v569=nil;v570=nil;v571=nil;v78[v80[2 + 0 ]]=v78[v80[4 -1 ]][v80[4]];v568=1;end if ((204 -(11 + 192))==v568) then v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]={};v72=v72 + (176 -(135 + 40)) ;v568=4 -2 ;end if (((3 + 1)==v568) or (1763<1755)) then v72=v72 + 1 ;v80=v68[v72];v571=v80[4 -2 ];v570=v78[v571];v568=7 -2 ;end if ((v568==(179 -(50 + 126))) or (3427<2151)) then v78[v80[5 -3 ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[1416 -(1233 + 180) ]][v80[973 -(522 + 447) ]];v568=1425 -(107 + 1314) ;end if (v568==5) then v569=v80[2 + 1 ];for v983=2 -1 ,v569 do v570[v983]=v78[v571 + v983 ];end break;end end else local v572=0;local v573;while true do if (v572==(0 + 0)) then v573=v80[3 -1 ];v78[v573](v13(v78,v573 + (3 -2) ,v73));break;end end end elseif ((v81<=(1933 -(716 + 1194))) or (3829==3060)) then if ((v81==(1 + 21)) or (250==371)) then local v574=0 + 0 ;local v575;local v576;local v577;local v578;while true do if (v574==(504 -(74 + 429))) then v73=(v577 + v575) -1 ;v578=0 -0 ;v574=1 + 1 ;end if ((4374>1370) and ((4 -2)==v574)) then for v986=v575,v73 do v578=v578 + 1 + 0 ;v78[v986]=v576[v578];end break;end if (v574==(0 -0)) then v575=v80[4 -2 ];v576,v577=v71(v78[v575](v78[v575 + 1 ]));v574=434 -(279 + 154) ;end end else v78[v80[780 -(454 + 324) ]]=v78[v80[3 + 0 ]][v80[4]];end elseif (v81>(41 -(12 + 5))) then v78[v80[2 + 0 ]]=v62[v80[3]];else local v583;v78[v80[4 -2 ]]=v80[2 + 1 ];v72=v72 + (1094 -(277 + 816)) ;v80=v68[v72];v78[v80[8 -6 ]]=v80[1186 -(1058 + 125) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[977 -(815 + 160) ]]=v80[12 -9 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]=v80[1 + 2 ];v72=v72 + (2 -1) ;v80=v68[v72];v583=v80[1900 -(41 + 1857) ];v78[v583]=v78[v583](v13(v78,v583 + (1894 -(1222 + 671)) ,v80[7 -4 ]));v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1184 -(229 + 953) ]][v78[v80[1777 -(1111 + 663) ]]]=v78[v80[1583 -(874 + 705) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3 + 0 ]][v80[7 -3 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[681 -(642 + 37) ]][v78[v80[3]]]=v80[4];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]][v78[v80[7 -4 ]]]=v78[v80[458 -(233 + 221) ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[1544 -(718 + 823) ]][v80[4]];end elseif ((3519>3133) and (v81<=(24 + 14))) then if ((4996>4721) and (v81<=(836 -(266 + 539)))) then if ((4023>=2719) and (v81<=28)) then if (v81<=(73 -47)) then v78[v80[1227 -(636 + 589) ]]=v78[v80[6 -3 ]] + v80[8 -4 ] ;elseif ((243<=4516) and (v81==(22 + 5))) then v78[v80[1 + 1 ]]=v78[v80[1018 -(657 + 358) ]]%v80[4] ;else v78[v80[4 -2 ]]=v80[6 -3 ];end elseif (v81<=(1216 -(1151 + 36))) then v78[v80[2 + 0 ]]= #v78[v80[1 + 2 ]];elseif (v81==(89 -59)) then v78[v80[2]][v80[1835 -(1552 + 280) ]]=v78[v80[838 -(64 + 770) ]];else local v610=0 + 0 ;while true do if ((3743>=1870) and (v610==(8 -4))) then v78[v80[1 + 1 ]]=v78[v80[1246 -(157 + 1086) ]][v80[7 -3 ]];v72=v72 + (4 -3) ;v80=v68[v72];v610=7 -2 ;end if (v610==7) then v78[v80[2 -0 ]]=v78[v80[822 -(599 + 220) ]][v80[7 -3 ]];v72=v72 + (1932 -(1813 + 118)) ;v80=v68[v72];v610=8;end if ((298<=3318) and (v610==(3 + 0))) then v78[v80[1219 -(841 + 376) ]][v78[v80[3 -0 ]]]=v80[1 + 3 ];v72=v72 + (2 -1) ;v80=v68[v72];v610=863 -(464 + 395) ;end if (v610==(0 -0)) then v78[v80[2]]=v78[v80[2 + 1 ]][v80[841 -(467 + 370) ]];v72=v72 + (1 -0) ;v80=v68[v72];v610=1 + 0 ;end if ((1156<3232) and (v610==(17 -12))) then v78[v80[2]][v78[v80[3]]]=v80[1 + 3 ];v72=v72 + (2 -1) ;v80=v68[v72];v610=526 -(150 + 370) ;end if ((777<2530) and (v610==(1291 -(74 + 1208)))) then v78[v80[4 -2 ]]=v78[v80[14 -11 ]][v80[3 + 1 ]];break;end if (v610==(398 -(14 + 376))) then v78[v80[3 -1 ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v610=8 + 1 ;end if ((3745>=2715) and ((2 + 0)==v610)) then v78[v80[2]]=v78[v80[8 -5 ]][v80[4 + 0 ]];v72=v72 + (79 -(23 + 55)) ;v80=v68[v72];v610=6 -3 ;end if ((1 + 0)==v610) then v78[v80[2 + 0 ]]={};v72=v72 + (1 -0) ;v80=v68[v72];v610=1 + 1 ;end if ((v610==(907 -(652 + 249))) or (4942==1715)) then v78[v80[2]][v78[v80[7 -4 ]]]=v78[v80[4]];v72=v72 + (1869 -(708 + 1160)) ;v80=v68[v72];v610=18 -11 ;end end end elseif (v81<=(61 -27)) then if (v81<=(59 -(10 + 17))) then local v161;local v162,v163;local v164;local v165;v78[v80[1 + 1 ]]=v62[v80[1735 -(1400 + 332) ]];v72=v72 + (1 -0) ;v80=v68[v72];v165=v80[1910 -(242 + 1666) ];v164=v78[v80[2 + 1 ]];v78[v165 + 1 ]=v164;v78[v165]=v164[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[3 + 0 ];v72=v72 + (941 -(850 + 90)) ;v80=v68[v72];v165=v80[3 -1 ];v162,v163=v71(v78[v165](v13(v78,v165 + (1391 -(360 + 1030)) ,v80[3 + 0 ])));v73=(v163 + v165) -1 ;v161=0 -0 ;for v191=v165,v73 do local v192=0 -0 ;while true do if ((v192==(1661 -(909 + 752))) or (2975>4424)) then v161=v161 + (1224 -(109 + 1114)) ;v78[v191]=v162[v161];break;end end end v72=v72 + 1 ;v80=v68[v72];v165=v80[3 -1 ];v78[v165]=v78[v165](v13(v78,v165 + 1 + 0 ,v73));v72=v72 + (243 -(6 + 236)) ;v80=v68[v72];v78[v80[2]]();v72=v72 + 1 ;v80=v68[v72];do return;end elseif (v81==(21 + 12)) then local v611;v78[v80[2]]=v80[3 + 0 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]=v80[4 -1 ];v72=v72 + (1134 -(1076 + 57)) ;v80=v68[v72];v611=v80[1 + 1 ];v78[v611]=v78[v611](v13(v78,v611 + (690 -(579 + 110)) ,v80[1 + 2 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[410 -(174 + 233) ]]=v78[v80[4]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[3 -1 ]]=v78[v80[2 + 1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1176 -(663 + 511) ]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[3];v72=v72 + (2 -1) ;v80=v68[v72];v611=v80[2 + 0 ];v78[v611]=v78[v611](v13(v78,v611 + (2 -1) ,v80[7 -4 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[3 -1 ]][v80[3 + 0 ]]=v78[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[724 -(478 + 244) ]]=v78[v80[520 -(440 + 77) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[7 -5 ]]=v80[1559 -(655 + 901) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[3 + 0 ];v72=v72 + 1 + 0 ;v80=v68[v72];v611=v80[7 -5 ];v78[v611]=v78[v611](v13(v78,v611 + (1446 -(695 + 750)) ,v80[3]));v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2 -0 ]][v80[11 -8 ]]=v78[v80[355 -(285 + 66) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[1313 -(682 + 628) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[302 -(176 + 123) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[272 -(239 + 30) ];v72=v72 + 1 ;v80=v68[v72];v611=v80[2];v78[v611]=v78[v611](v13(v78,v611 + 1 + 0 ,v80[3 + 0 ]));v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[5 -3 ]][v80[318 -(306 + 9) ]]=v78[v80[13 -9 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[2 + 1 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1377 -(1140 + 235) ]]=v80[2 + 1 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[55 -(33 + 19) ];v72=v72 + 1 + 0 ;v80=v68[v72];v611=v80[5 -3 ];v78[v611]=v78[v611](v13(v78,v611 + 1 + 0 ,v80[3]));v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[692 -(586 + 103) ]]=v78[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[9 -6 ]];v72=v72 + (1489 -(1309 + 179)) ;v80=v68[v72];v78[v80[2 -0 ]]=v80[2 + 1 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[5 -2 ];v72=v72 + 1 ;v80=v68[v72];v611=v80[3 -1 ];v78[v611]=v78[v611](v13(v78,v611 + (610 -(295 + 314)) ,v80[6 -3 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[1964 -(1300 + 662) ]][v80[9 -6 ]]=v78[v80[1759 -(1178 + 577) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[8 -5 ]];v72=v72 + (1406 -(851 + 554)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[8 -5 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[304 -(115 + 187) ]]=v80[3 + 0 ];v72=v72 + 1 + 0 ;v80=v68[v72];v611=v80[7 -5 ];v78[v611]=v78[v611](v13(v78,v611 + (1162 -(160 + 1001)) ,v80[3 + 0 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[3 -1 ]][v80[361 -(237 + 121) ]]=v78[v80[901 -(525 + 372) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[4 -1 ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]=v80[145 -(96 + 46) ];v72=v72 + (778 -(643 + 134)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[6 -3 ];v72=v72 + (3 -2) ;v80=v68[v72];v611=v80[2];v78[v611]=v78[v611](v13(v78,v611 + 1 + 0 ,v80[3]));v72=v72 + 1 ;v80=v68[v72];v78[v80[3 -1 ]][v80[5 -2 ]]=v78[v80[723 -(316 + 403) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[8 -5 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]]=v80[3 + 0 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[6 -4 ]]=v80[14 -11 ];v72=v72 + 1 ;v80=v68[v72];v611=v80[3 -1 ];v78[v611]=v78[v611](v13(v78,v611 + 1 + 0 ,v80[5 -2 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v80[8 -5 ]]=v78[v80[21 -(12 + 5) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[7 -5 ]]=v78[v80[5 -2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[6 -3 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[1976 -(1656 + 317) ];v72=v72 + 1 + 0 ;v80=v68[v72];v611=v80[2 + 0 ];v78[v611]=v78[v611](v13(v78,v611 + (2 -1) ,v80[14 -11 ]));v72=v72 + (355 -(5 + 349)) ;v80=v68[v72];v78[v80[9 -7 ]][v80[1274 -(266 + 1005) ]]=v78[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[6 -4 ]]=v78[v80[3 -0 ]];v72=v72 + (1697 -(561 + 1135)) ;v80=v68[v72];v78[v80[2 -0 ]]=v80[9 -6 ];v72=v72 + (1067 -(507 + 559)) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + (2 -1) ;v80=v68[v72];v611=v80[6 -4 ];v78[v611]=v78[v611](v13(v78,v611 + (389 -(212 + 176)) ,v80[908 -(250 + 655) ]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 -0 ]][v80[4 -1 ]]=v78[v80[1960 -(1869 + 87) ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]=v78[v80[1904 -(484 + 1417) ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]=v80[4 -1 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[775 -(48 + 725) ]]=v80[4 -1 ];v72=v72 + (2 -1) ;v80=v68[v72];v611=v80[2];v78[v611]=v78[v611](v13(v78,v611 + 1 + 0 ,v80[3]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]][v80[1 + 2 ]]=v78[v80[2 + 2 ]];v72=v72 + (854 -(152 + 701)) ;v80=v68[v72];v78[v80[1313 -(430 + 881) ]]=v78[v80[3]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[898 -(557 + 338) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -3 ]]=v80[10 -7 ];v72=v72 + 1 ;v80=v68[v72];v611=v80[2];v78[v611]=v78[v611](v13(v78,v611 + 1 ,v80[7 -4 ]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[803 -(499 + 302) ]][v80[869 -(39 + 827) ]]=v78[v80[10 -6 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[7 -5 ]]=v78[v80[3 -0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[8 -5 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[4 -1 ];v72=v72 + 1 ;v80=v68[v72];v611=v80[106 -(103 + 1) ];v78[v611]=v78[v611](v13(v78,v611 + 1 ,v80[3]));v72=v72 + (555 -(475 + 79)) ;v80=v68[v72];v78[v80[4 -2 ]][v80[9 -6 ]]=v78[v80[1 + 3 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1505 -(1395 + 108) ]]=v78[v80[8 -5 ]];v72=v72 + (1205 -(7 + 1197)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + 1 ;v80=v68[v72];v611=v80[2];v78[v611]=v78[v611](v13(v78,v611 + (320 -(27 + 292)) ,v80[3]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 -0 ]][v80[12 -9 ]]=v78[v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[3 -1 ]]=v78[v80[5 -2 ]];v72=v72 + (140 -(43 + 96)) ;v80=v68[v72];v78[v80[8 -6 ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v78[v80[3 -1 ]]=v80[3 + 0 ];v72=v72 + 1 + 0 ;v80=v68[v72];v611=v80[2];v78[v611]=v78[v611](v13(v78,v611 + (1 -0) ,v80[2 + 1 ]));v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[1 + 2 ]]=v78[v80[1755 -(1414 + 337) ]];v72=v72 + (1941 -(1642 + 298)) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[8 -5 ]];else v72=v80[3];end elseif (v81<=36) then if ((2898>=1084) and (v81==35)) then local v695=0;local v696;local v697;local v698;while true do if (v695==(11 -7)) then v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[975 -(357 + 615) ]][v80[3 + 1 ]];v72=v72 + (2 -1) ;v695=5 + 0 ;end if ((v695==1) or (103==4087)) then v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[6 -3 ]][v80[4 + 0 ]];v72=v72 + 1 + 0 ;v695=2 + 0 ;end if (v695==(1307 -(384 + 917))) then v78[v80[699 -(128 + 569) ]]=v78[v80[1546 -(1407 + 136) ]][v80[1891 -(687 + 1200) ]];v72=v72 + (1711 -(556 + 1154)) ;v80=v68[v72];v78[v80[6 -4 ]]=v78[v80[98 -(9 + 86) ]][v80[425 -(275 + 146) ]];v695=2 + 5 ;end if ((3036>2582) and (v695==(64 -(29 + 35)))) then v696=nil;v697=nil;v698=nil;v78[v80[8 -6 ]]={};v695=2 -1 ;end if (v695==(13 -10)) then v78[v80[2]]=v78[v80[3]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[1015 -(53 + 959) ]][v80[412 -(312 + 96) ]];v695=6 -2 ;end if (v695==5) then v80=v68[v72];v78[v80[287 -(147 + 138) ]]=v78[v80[3]][v80[903 -(813 + 86) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v695=10 -4 ;end if (v695==(500 -(18 + 474))) then v696=v80[3];for v989=1,v696 do v697[v989]=v78[v698 + v989 ];end break;end if (v695==(1 + 1)) then v80=v68[v72];v78[v80[2]]={};v72=v72 + 1 ;v80=v68[v72];v695=9 -6 ;end if ((v695==7) or (255>608)) then v72=v72 + (1087 -(860 + 226)) ;v80=v68[v72];v698=v80[2];v697=v78[v698];v695=311 -(121 + 182) ;end end else local v699;local v700,v701;local v702;v78[v80[1 + 1 ]]=v78[v80[3]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1242 -(988 + 252) ]]=v61[v80[1 + 2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v61[v80[3]];v72=v72 + (1971 -(49 + 1921)) ;v80=v68[v72];v78[v80[892 -(223 + 667) ]]=v61[v80[55 -(51 + 1) ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[3 -1 ]]=v61[v80[3]];v72=v72 + (1126 -(146 + 979)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[608 -(311 + 294) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[8 -5 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[1446 -(496 + 947) ]] + v80[4] ;v72=v72 + (1359 -(1233 + 125)) ;v80=v68[v72];v702=v80[1 + 1 ];v700,v701=v71(v78[v702](v13(v78,v702 + 1 ,v80[3])));v73=(v701 + v702) -(1 + 0) ;v699=0 + 0 ;for v859=v702,v73 do v699=v699 + (1646 -(963 + 682)) ;v78[v859]=v700[v699];end v72=v72 + 1 ;v80=v68[v72];v702=v80[2 + 0 ];v78[v702]=v78[v702](v13(v78,v702 + (1505 -(504 + 1000)) ,v73));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v61[v80[1 + 2 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]]=v61[v80[2 + 1 ]];v72=v72 + (183 -(156 + 26)) ;v80=v68[v72];v78[v80[2]]=v78[v80[2 + 1 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]= #v78[v80[3]];v72=v72 + (165 -(149 + 15)) ;v80=v68[v72];v78[v80[962 -(890 + 70) ]]=v78[v80[3]]%v78[v80[121 -(39 + 78) ]] ;v72=v72 + (483 -(14 + 468)) ;v80=v68[v72];v78[v80[4 -2 ]]=v80[3] + v78[v80[11 -7 ]] ;v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]= #v78[v80[1 + 2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3]]%v78[v80[2 + 2 ]] ;v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[10 -7 ] + v78[v80[4]] ;v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[54 -(12 + 39) ]] + v80[4] ;v72=v72 + 1 + 0 ;v80=v68[v72];v702=v80[5 -3 ];v700,v701=v71(v78[v702](v13(v78,v702 + 1 ,v80[10 -7 ])));v73=(v701 + v702) -(1 + 0) ;v699=0 + 0 ;for v862=v702,v73 do v699=v699 + (2 -1) ;v78[v862]=v700[v699];end v72=v72 + 1 + 0 ;v80=v68[v72];v702=v80[9 -7 ];v700,v701=v71(v78[v702](v13(v78,v702 + 1 ,v73)));v73=(v701 + v702) -(1711 -(1596 + 114)) ;v699=0 -0 ;for v865=v702,v73 do local v866=713 -(164 + 549) ;while true do if (v866==(1438 -(1059 + 379))) then v699=v699 + (1 -0) ;v78[v865]=v700[v699];break;end end end v72=v72 + 1 + 0 ;v80=v68[v72];v702=v80[1 + 1 ];v78[v702]=v78[v702](v13(v78,v702 + (393 -(145 + 247)) ,v73));v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[3]]%v80[2 + 2 ] ;v72=v72 + (2 -1) ;v80=v68[v72];v702=v80[1 + 1 ];v700,v701=v71(v78[v702](v78[v702 + 1 + 0 ]));v73=(v701 + v702) -(1 -0) ;v699=0;for v867=v702,v73 do local v868=720 -(254 + 466) ;while true do if ((560 -(544 + 16))==v868) then v699=v699 + (2 -1) ;v78[v867]=v700[v699];break;end end end v72=v72 + (629 -(294 + 334)) ;v80=v68[v72];v702=v80[255 -(236 + 17) ];v78[v702](v13(v78,v702 + 1 + 0 ,v73));end elseif (v81>(29 + 8)) then v78[v80[2]]=v80[10 -7 ] + v78[v80[4]] ;else v78[v80[9 -7 ]]=v78[v80[3]]%v78[v80[3 + 1 ]] ;end elseif ((v81<=(38 + 7)) or (3982<=2940)) then if (v81<=41) then if ((v81<=39) or (3791>4684)) then local v177=0;local v178;local v179;local v180;while true do if ((v177==(794 -(413 + 381))) or (2927<=967)) then v178=v69[v80[1 + 2 ]];v179=nil;v177=1 -0 ;end if (v177==(4 -2)) then for v882=1971 -(582 + 1388) ,v80[6 -2 ] do v72=v72 + 1 + 0 ;local v883=v68[v72];if (v883[365 -(326 + 38) ]==(118 -78)) then v180[v882-1 ]={v78,v883[3]};else v180[v882-(1 + 0) ]={v61,v883[1667 -(1269 + 395) ]};end v77[ #v77 + (493 -(76 + 416)) ]=v180;end v78[v80[2]]=v29(v178,v179,v62);break;end if (v177==(444 -(319 + 124))) then v180={};v179=v10({},{__index=function(v885,v886) local v887=v180[v886];return v887[2 -1 ][v887[1009 -(564 + 443) ]];end,__newindex=function(v888,v889,v890) local v891=v180[v889];v891[2 -1 ][v891[2]]=v890;end});v177=2;end end elseif ((v81>40) or (631>2929)) then v78[v80[460 -(337 + 121) ]][v78[v80[8 -5 ]]]=v80[13 -9 ];else v78[v80[1913 -(1261 + 650) ]]=v78[v80[2 + 1 ]];end elseif (v81<=43) then if (v81==(66 -24)) then local v732;local v733;local v734;v78[v80[1819 -(772 + 1045) ]]=v78[v80[1 + 2 ]][v80[148 -(102 + 42) ]];v72=v72 + (1845 -(1524 + 320)) ;v80=v68[v72];v78[v80[1272 -(1049 + 221) ]]=v78[v80[159 -(18 + 138) ]][v80[4]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1104 -(67 + 1035) ]]=v78[v80[351 -(136 + 212) ]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[8 -6 ]]=v78[v80[3 + 0 ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v734=v80[1606 -(240 + 1364) ];v733=v78[v734];v732=v80[1085 -(1050 + 32) ];for v871=3 -2 ,v732 do v733[v871]=v78[v734 + v871 ];end else local v747=0 + 0 ;local v748;while true do if ((1055 -(331 + 724))==v747) then v748=v80[2];v78[v748]=v78[v748](v13(v78,v748 + 1 ,v73));break;end end end elseif ((v81==(4 + 40)) or (341>3956)) then local v749=v80[646 -(269 + 375) ];local v750,v751=v71(v78[v749](v13(v78,v749 + (726 -(267 + 458)) ,v73)));v73=(v751 + v749) -(1 + 0) ;local v752=0 -0 ;for v874=v749,v73 do local v875=818 -(667 + 151) ;while true do if (v875==0) then v752=v752 + (1498 -(1410 + 87)) ;v78[v874]=v750[v752];break;end end end else v78[v80[2]]=v78[v80[1900 -(1504 + 393) ]][v80[10 -6 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[798 -(461 + 335) ]]={};v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[3]][v80[1765 -(1730 + 31) ]];v72=v72 + (1668 -(728 + 939)) ;v80=v68[v72];v78[v80[6 -4 ]][v78[v80[5 -2 ]]]=v80[9 -5 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[1071 -(138 + 930) ]][v80[4 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[12 -9 ]][v80[4]];v72=v72 + (1767 -(459 + 1307)) ;v80=v68[v72];v78[v80[1872 -(474 + 1396) ]][v78[v80[5 -2 ]]]=v78[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v78[v80[1 + 2 ]]]=v78[v80[11 -7 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[6 -4 ]][v78[v80[12 -9 ]]]=v78[v80[595 -(562 + 29) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v78[v80[1422 -(374 + 1045) ]]]=v78[v80[4 + 0 ]];end elseif (v81<=48) then if (v81<=(142 -96)) then local v181=v80[640 -(448 + 190) ];local v182=v78[v181];local v183=v80[1 + 2 ];for v193=1 + 0 ,v183 do v182[v193]=v78[v181 + v193 ];end elseif (v81>(31 + 16)) then local v771=0;local v772;local v773;local v774;while true do if (v771==2) then if ((v773>(0 -0)) or (4842<=1498)) then if ((v774<=v78[v772 + (2 -1) ]) or (1312>4950)) then v72=v80[1497 -(1307 + 187) ];v78[v772 + (11 -8) ]=v774;end elseif ((v774>=v78[v772 + (2 -1) ]) or (840==1211)) then local v1009=0 -0 ;while true do if (v1009==0) then v72=v80[3];v78[v772 + 3 ]=v774;break;end end end break;end if ((4499>1584) and ((684 -(232 + 451))==v771)) then v774=v78[v772] + v773 ;v78[v772]=v774;v771=2 + 0 ;end if (v771==(0 + 0)) then v772=v80[2];v773=v78[v772 + (566 -(510 + 54)) ];v771=1 -0 ;end end else v78[v80[2]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[38 -(13 + 23) ]]=v62[v80[5 -2 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v78[v80[4 -1 ]][v80[1092 -(830 + 258) ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]=v62[v80[2 + 1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1443 -(860 + 581) ]]=v78[v80[10 -7 ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[243 -(237 + 4) ]]=v62[v80[6 -3 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[3]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v62[v80[3]];v72=v72 + (1 -0) ;v80=v68[v72];if  not v78[v80[2 + 0 ]] then v72=v72 + 1 ;else v72=v80[3];end end elseif ((3708<=4221) and (v81<=50)) then if ((v81==49) or (3680<=483)) then local v788=v80[2 + 0 ];do return v13(v78,v788,v73);end else v78[v80[7 -5 ]]=v78[v80[3]][v80[2 + 2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]][v78[v80[3]]]=v80[3 + 1 ];v72=v72 + (1427 -(85 + 1341)) ;v80=v68[v72];v78[v80[3 -1 ]][v78[v80[8 -5 ]]]=v78[v80[4]];v72=v72 + (373 -(45 + 327)) ;v80=v68[v72];v78[v80[3 -1 ]][v78[v80[3]]]=v78[v80[506 -(444 + 58) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v62[v80[2 + 1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[8 -5 ]][v80[1736 -(64 + 1668) ]];v72=v72 + (1974 -(1227 + 746)) ;v80=v68[v72];v78[v80[5 -3 ]][v80[5 -2 ]]=v78[v80[498 -(415 + 79) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v62[v80[494 -(142 + 349) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 -0 ]]=v78[v80[2 + 1 ]][v80[3 + 1 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1866 -(1710 + 154) ]][v80[321 -(200 + 118) ]]=v78[v80[4]];end elseif (v81>(21 + 30)) then v78[v80[2 -0 ]]=v78[v80[4 -1 ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v62[v80[2 + 1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[1253 -(363 + 887) ]][v80[6 -2 ]];v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[2]]=v80[1 + 2 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[1667 -(674 + 990) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[3];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1057 -(507 + 548) ]]=v80[3];v72=v72 + (838 -(289 + 548)) ;v80=v68[v72];v78[v80[1820 -(821 + 997) ]]=v80[3];v72=v72 + (256 -(195 + 60)) ;v80=v68[v72];v78[v80[2]]=v80[1 + 2 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1503 -(251 + 1250) ]]=v80[8 -5 ];else v78[v80[2]][v78[v80[3 + 0 ]]]=v78[v80[1036 -(809 + 223) ]];end v72=v72 + (1 -0) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
